#--------------------------------------------
# A function to create binary search tree.
#--------------------------------------------

class Node():
    def __init__(self, value):
        self.value = value
        self.left = self.right = None

def insert_node_into_tree(node, value):
    if not node: # If node is empty
        node = Node(value)
    else:
        if value <= node.value: # Insert into left of node
            node.left = insert_node_into_tree(node.left, value)
        else: # Insert into right of node
            node.right = insert_node_into_tree(node.right, value)
    return node
 
def preorder(node):
    """
    Function for preorder traversal of binary search tree
    """
    print node.value,
    if node.left:
        preorder(node.left)
    if node.right:
        preorder(node.right)
        
if __name__ == "__main__":
    # Create a tree
    node_values = [10,40,20,30,10]
    rootNode = None
    for value in node_values:
        rootNode = insert_node_into_tree(rootNode, value)
    preorder(rootNode)
